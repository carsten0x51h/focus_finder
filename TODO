TODO
----

-Replace "star recognizer" test images -> instead of one big, multiple small ones with only 2-5 stars.
-Extract starmath library! -> Need a concept of namespaces, overall structure etc. - First plan!

-Add test for remove_nans() - add parameter to allow specifying size of filter matrix
-Add unit tests for pipeline::io::write()
-Add hfd() to "actions"
-Add fwhm() to "actions" 
-IDEA: stretch(curve) funcrtion
-...


DONE
----
-IDEA: Fits writer --> write(path, filenamePattern) as pipeline!, Rename images() to read()
-Replace test image since reduced image leads to bad pixel-filter remove the stars...
-Real workd example 3 with clustering?
-Add bad pixel remover/interpolator (hot- and cold pixel algorithm removal by specifying a threshold? Or only for hot a threshold and for dead pixels a 0)




-Next steps
-Change project structure as proposed by https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1204r0.html

-TODO: Deprecated cmake message?
-TODO: mIcon... missing (mail...)?
-TODO: Dep. to QGIS required?
 [ 58%] Building CXX object source/focus_finder/gui/CMakeFiles/focus_finder_gui.dir/profile_settings_dialog.cpp.o
/home/devnull/workspace/fofi_git/fofi/build/source/focus_finder/gui/focus_finder_gui_autogen/include/ui_profile_settings_dialog.h:28:10: error: 'qgscollapsiblegroupbox.h' file not found [clang-diagnostic-error]
#include "qgscollapsiblegroupbox.h"
 --> Get rid of this dep.?
 
-Remove HACK - FocusCurveRecordSetT - load()
        	//get<FocusMeasureTypeT>()
        	FocusMeasureTypeT::TypeE focusMeasureType = FocusMeasureTypeT::HFD; // TODO: LOAD
        	float focusMeasureLimit = 18.0F; // TODO: Load
        	// TODO: Load creation_timestamp....

 	-Make use of stored curve in focus finder.
	-Move device deplays to profile (sep. delay for each device?)
	-Focus-controller: TODO: Should this be configurable? -> Yes, part of profile...?!... Just need a good name...  const float STEP_FACTOR = 3.0F;
	-Handle cancel exception in "focus curve recorder" and "focus finder"
	-Remove hardcoded exposure times (e.g. in focus curve recorder -> maybe this field should be inegrated also into the focus curve recorder frame!)
	-Recorder should listen to position events from focuser -> draw a line of current position...
	-Use stored focus curve / function from prifle in focus finder
	-Should Hfd, Fwhm vert, Fwhm horz all be calculated right after recording (during the recording process), or just the one which is needed??
	-AboutDialog -> draw program version on image!
	-On INDI-Server disconnect (or camera disconnect, or camera device removal), stop exposure
	-Make indi server configurabe - better: make INDI one way to connect to devices
	-Extend curve fitting so that certain parameters can be "fixed" (-> difficult / more effort)

	-Use boost log to filter out logs by component (-> different channels?), 

-MainWindow
	-Selected POI should overwrite ROI?! (if both are selected?)
	-Fully integrate FocusFinderExecutor + actual FocusFinder with events (?)

-ManageDeviceProfilesDialog
	-Implement New + edit profile -> see libreoffice document...
		-Extend persistence of boost tree to SizeT, enums etc. 
	-ProfileManager - Add directory listener to get notified when profile was added or removed (same as renamed). 
	-Idea: add a blue info icon behind each input field which explains the field when hovering over it with the mouse
	-Idea: Visualize some things in the dialog - e.g. the star window with a graphics and star, which changes depnding on input paramerters
	-Close ManageDeviceProfilesDialog if MainWindow is closed

-Focus / FocusCntlPanel
	-Idea: Also mFfl should allow registering to an event that is fired when focus finder process has started! Then this panel can be disabled (same for camera cntl panel).
	-Idea: In focus cntl panel - maybe indicate absolute position of focus by a line and a dot where left is minimu, right is maximum and dot is the current position... but maybe this should go to a sep panel...
    	-Add listener - when temperature has changed...
    	-FocusCntlPanel - listen for up/down arrow key -> move focus up / down 1 step (or maybe 10 steps)... page up, page down also (10x more..)

-Others
	-Cooler device simulator
	-Integrate into UI
	-Finish device dialog to connect devices
	-Impl. first indi device against device IF
	-Implement binning - dummy camera, selection in GUI, etc.
	-3D star profile - see example - https://doc.qt.io/qt-5/qtdatavisualization-surface-example.html

-LP
	-Always display last "corrected" star image im "focus curve recorder"
	-Remove camera delay hack -> hardcoded 1s exposure time... was 0 for some reason, check if "repeat checkbox" has any effect when recording a curve...
    	-atik driver now has it's own xml file - not only drivers.xml any longer... check INDI...
    	-Camera error handling - e.g. when setting a 0 as exposure time, no obvious feedback is given to the user / progress wheel continues running.... but there was an error message in the log
    	-"Image stretcher" sometimes shows black stars... and linear scaling is more or less useless
    	-Star detection algorithm often shows that there are 7 or 8 stars selected -> max-entropy binarization fails -> clustering does not work reliable
    	-Fails with "Insufficient data points" exc. even before one can press save / apply!
    	-One place to set the "Focus measure limit"! In the GUI! -> profile!
    	-Do not calculate all values (FwhmT & HFD) by default when loading the curve record (and also not when recording). Just calc the one which is/was requested
    	-Display curve problem: change of pos is small, curve appears like a line... -> auto scale...

-DEBUG
	-Problematic curve with simulator:
        --- FocusCurveT ---
           > Focus measure type: FWHM_AVERAGE
           > Focus measure limit: 12
           > Fitting curve type: HYPERBOLIC
           > Curve parms: A_IDX = 3.05521
              B_IDX = 0.000517702
              C_IDX = 40835.7
              D_IDX = 3.74167
           > [minPos, maxPos]=[25000, 48000]

	   After running again, it worked...:
           [2020-01-07 21:45:53.288767]: Calculated focus curve parameters: 
           --- FocusCurveT ---
              > Focus measure type: FWHM_AVERAGE
              > Focus measure limit: 12
              > Fitting curve type: HYPERBOLIC
              > Curve parms: A_IDX = 33060.9
                 B_IDX = 39.7046
                 C_IDX = 36493.3
                 D_IDX = -36.5154
              > [minPos, maxPos]=[25000, 48000]

